name: Verify and publish a release candidate package
on:
    workflow_dispatch:
        inputs:
            branch_name:
                required: true
                description: The branch the release will happen. For example, if you are to release 4.1.5 this would be `4.1.x`
                maintenance branch. If you are going to release a new minor, this variable would be `master`.
            apidocs_branch_name:
                required: true
                description: The branch of the api docs.
                default: gh-pages

jobs:
    verify-release-candidate-and-publish:
        name: Verify release candidate and publish
        runs-on: ubuntu-latest

        steps:
            - name: Checkout to branch ${{ github.event.inputs.branch_name }}
              uses: actions/checkout@v2
              with:
                  ref: ${{ github.event.inputs.branch_name }}
            - name: Calculate package version
              run: echo "::set-output name=value::$(cat package.json | jq -r .version)"
              id: version
            - name: Setup Java 8
              uses: actions/setup-java@v1
              with:
                  java-version: 8
            - name: Setup Node.js 12
              uses: actions/setup-node@v2
              with:
                  node-version: 12
            - name: Prepere release candidate for release ${{ steps.version.outputs.value }}
              run: |
                  node scripts/download-release-candidate.js -b ${{ github.event.inputs.branch_name }} -u devOpsHazelcast -p $GH_PAT -o release-candidate.zip
                  unzip release-candidate.zip
              env:
                  GH_PAT: ${{ secrets.GH_PAT }}
            - name: Check integrity of the pack
              run: sha256sum --check release-pack.sha256
            - name: Unarchive the pack
              run: tar xvzf hazelcast-client-*.tgz
            - name: Install dependencies
              run: npm install
            - name: Replace lib folder
              run: |
                rm -rf lib
                mv package/lib .
            - name: Validate User Code
              run: npm run validate-user-code
            - name: Generate docs
              run: npm run generate-docs
            - name: Run all tests
              env:
                  HAZELCAST_ENTERPRISE_KEY: ${{ secrets.HAZELCAST_ENTERPRISE_KEY }}
              run: npm run coverage
            - name: Publish
              run: npm publish hazelcast-client-${{ steps.version.outputs.value }}.tgz
            - name: Checkout to branch ${{ github.event.inputs.apidocs_branch_name }}
              uses: actions/checkout@v2
              with:
                  ref: ${{ github.event.inputs.apidocs_branch_name }}
                  path: apidocs
            - name: Move docs folder
              run: |
                mkdir $GITHUB_WORKSPACE/apidocs/api/$VERSION
                mv docs $GITHUB_WORKSPACE/apidocs/api/$VERSION
              env:
                  VERSION: ${{ steps.version.outputs.value }}
            - name: Change current version
              run: "echo 'version: $VERSION' > _data/current.yaml"
              env:
                  VERSION: ${{ steps.version.outputs.value }}
              working-directory: apidocs
            - name: Push apidocs to ${{ github.event.inputs.apidocs_branch_name }}
              uses: EndBug/add-and-commit@v7
              with:
                  add: api/$VERSION _data/current.yaml
                  message: Add version $VERSION
                  cwd: $GITHUB_WORKSPACE/apidocs
                  default_author: github_actions
                  branch: ${{ github.event.inputs.apidocs_branch_name }}
              env:
                  VERSION: ${{ steps.version.outputs.value }}
            - name: Congratulate
              run: |
                echo "Congratulations, Node.js client $VERSION has been released. Don't forget to tag the latest commit on
                  branch ${{ github.event.inputs.apidocs_branch_name }} with the tag 'v$VERSION'"
                echo "You can install the released package via `npm install hazelcast-client@$VERSION`"
              env:
                  VERSION: ${{ steps.version.outputs.value }}
